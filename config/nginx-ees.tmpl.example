server {
    listen       80;
    listen       [::]:80;
    server_name  {{.ServerName}};

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return       301 https://$server_name$request_uri;
}

server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{.ServerName}};

    root /var/web/{{.RefSlug}}/public;
    index index.php index.html index.htm;

    ssl_protocols TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # OCSP Stapling
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=15768000";

    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_certificate /path/to/certificates/file.crt;; # if chain, self + intermediate
    ssl_certificate_key /path/to/certificates/file.key; # private key

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/private/ca-certs.pem;

    location / {
      try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
      try_files $uri /index.php =404;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass 127.0.0.1:{{.PortPhp}};
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
      access_log        off;
      log_not_found     off;
      expires           360d;
    }

    location ~ /\. {
      access_log off;
      log_not_found off;
      deny all;
    }
}
